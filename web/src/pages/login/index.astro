---
import { SignIn, SignOut } from "auth-astro/components";
import { getSession } from "auth-astro/server";
import List from "@components/List";
import Btn from "@components/Button";
import Text from "@components/Text";
import Page from "@layouts/dashboard.astro";
import Icon from "@components/Icon";
import { post } from "@util/fetch";
import { to } from "@util/navigation";
import Slideshow from "@components/Slideshow/Slideshow.astro";
import Link from "@components/Link";
import API from "@util/api";
import { generateKeys, encrypt, sign, verify } from "paseto-ts/v4";

export const prerender = false;

const session = await getSession(Astro.request);

console.log(session);

let token;
let pKey;

let userExists = false;

if (session != null) {
  let api = new API({
    token: "EhlxdhOjKCpI6lJL4M2e4",
  });
  let user = await api.users.info(session.user?.email || "");
  // console.log();
  if (user.email != null) {
    userExists = true;
    const { secretKey, publicKey } = generateKeys("public");
    pKey = publicKey;
    const payload = { ...user, key: "EhlxdhOjKCpI6lJL4M2e4" };
    // create token
    token = await sign(
      // secretKey = k4.secret.xxx..
      secretKey, // string | Uint8Array
      payload, // Payload | string | Uint8Array
      {
        addExp: false, // to remove an expires time
      }
    );
  } else {
    token = "";
    pKey = "";
  }

  // if (user.email != null) return Astro.redirect("/login/dashboard");

  //   let api = new API();
  //   let users = await api.users.list();
  //   console.log("USERS ----", users);
  // let user = await post(`http://localhost:3003/users/info`, {
  // 	email: session?.user?.email,
  // });
  // if (!user.email) return Astro.redirect("/signup");
  // session.user = {
  // 	...session.user,
  // 	...user,
  // };
  console.log(session);
  // return Astro.redirect("/login/dashboard");
}
---

<Page layout="hm">
  <!-- <SignIn provider="google">Google Sign In</SignIn> -->
  <header el="header"></header>
  <main el="main" class="login">
    <!-- <Slideshow style={{height: '100svh', position: 'absolute', zIndex: -1}} /> -->
    <List el="md center" style={{ paddingTop: 200 }}>
      <Link href="/">
        <Icon
          name="logo"
          size={390}
          client:only="react"
          customStyle={{ height: 100 }}
        />
      </Link>
      <!-- <img src="/assets/logo/litpix_logo_light.svg" class="logo" /> -->
      {
        session?.user == null && (
          <SignIn provider="google" style={{ all: "unset" }}>
            <Btn client:only="react" leftIcon="google" variant="secondaryWhite">
              Google Sign In
            </Btn>
          </SignIn>
        )
      }
      {
        session?.user != null && userExists == true && (
          <List el="xxsm center">
            <Btn
              client:only="react"
              variant="secondaryWhite"
              url="/login/dashboard"
            >
              View Dashboard
            </Btn>
            <SignOut style={{ all: "unset" }}>
              <Btn variant="tertiaryWhite" client:only>
                Logout
              </Btn>
            </SignOut>
          </List>
        )
      }
      {
        session?.user != null && userExists == false && (
          <List el="md center">
            <Text color="white">Unauthorized: No account found.</Text>
            <SignOut style={{ all: "unset" }}>
              <Btn variant="secondaryWhite" client:only>
                Logout
              </Btn>
            </SignOut>
          </List>
        )
      }

      <!-- <Btn variant="secondaryWhite" id="login">Login</Btn>
      <Btn variant="secondaryWhite" id="logout">logout</Btn> -->
    </List>
  </main>
</Page>

<script define:vars={{ token, pKey }}>
  localStorage.token = token;
  localStorage.publicKey = pKey;
</script>

<script>
  const { signIn, signOut } = await import("auth-astro/client");
  document.querySelector("#login").onclick = () => signIn("google");
  document.querySelector("#logout").onclick = () => signOut();
</script>

<style>
  main {
    min-height: calc(100svh - 80px);
  }
  .login .logo {
    height: 100px;
    width: auto;
  }
  body {
    background-image: url(/assets/img/background.avif);
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
    background-blend-mode: color-dodge;
  }
</style>
